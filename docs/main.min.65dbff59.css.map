{"version":3,"sources":["src\\scss\\main.scss","src\\scss\\_include-media.scss","src\\scss\\_responsive.scss"],"names":[],"mappings":"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","file":"main.min.65dbff59.css","sourceRoot":"..","sourcesContent":["$primary: #2e86c1;\r\n\r\n::-webkit-scrollbar {\r\n    width: 10px;\r\n}\r\n\r\n::-webkit-scrollbar-track {\r\n    -webkit-box-shadow: inset 0 0 6px rgba(0, 0, 0, 0.2);\r\n    box-shadow: inset 0 0 6px rgba(0, 0, 0, 0.2);\r\n}\r\n\r\n::-webkit-scrollbar-thumb {\r\n    -webkit-box-shadow: inset 0 0 6px rgba(0, 0, 0, 0.4);\r\n    box-shadow: inset 0 0 6px rgba(0, 0, 0, 0.4);\r\n    background: $primary;\r\n}\r\n\r\nbody {\r\n    padding: 0;\r\n    margin: 0;\r\n    overflow-x: hidden;\r\n}\r\n\r\nh2 {\r\n    color: darken($primary, 15%);\r\n}\r\n\r\nh5 {\r\n    color: darken($primary, 8%);\r\n}\r\n\r\n.header,\r\n.footer {\r\n    fill: $primary;\r\n}\r\n\r\n.navbar-custom {\r\n    background-color: $primary;\r\n    font: 700 0.875rem/0.875rem \"Open Sans\", sans-serif;\r\n    transition: all 0.2s;\r\n}\r\n\r\n.navbar-custom .container {\r\n    max-width: 87.5rem;\r\n}\r\n\r\n.navbar-custom .navbar-brand.logo-image img {\r\n    width: 50%;\r\n}\r\n\r\n.navbar-custom .navbar-brand.logo-text {\r\n    font: 700 2rem/1.5rem \"Open Sans\", sans-serif;\r\n    color: #fff;\r\n    text-decoration: none;\r\n}\r\n\r\n.navbar-custom .navbar-nav {\r\n    margin-top: 0.75rem;\r\n    margin-bottom: 0.5rem;\r\n}\r\n\r\n.navbar-custom .nav-item .nav-link {\r\n    padding: 0.625rem 0.75rem 0.625rem 0.75rem;\r\n    color: #f7f5f5;\r\n    opacity: 0.8;\r\n    text-decoration: none;\r\n    transition: all 0.2s ease;\r\n}\r\n\r\n.navbar-custom .nav-item .nav-link:hover,\r\n.navbar-custom .nav-item .nav-link.active {\r\n    color: #fff;\r\n    opacity: 1;\r\n}\r\n\r\n.navbar-custom .navbar-toggler {\r\n    padding: 0;\r\n    border: none;\r\n    color: #fff;\r\n    font-size: 2rem;\r\n}\r\n\r\n.navbar-custom\r\n    button[aria-expanded=\"false\"]\r\n    .navbar-toggler-awesome.fas.fa-times {\r\n    display: none;\r\n}\r\n\r\n.navbar-custom\r\n    button[aria-expanded=\"false\"]\r\n    .navbar-toggler-awesome.fas.fa-bars {\r\n    display: inline-block;\r\n}\r\n\r\n.navbar-custom\r\n    button[aria-expanded=\"true\"]\r\n    .navbar-toggler-awesome.fas.fa-bars {\r\n    display: none;\r\n}\r\n\r\n.navbar-custom\r\n    button[aria-expanded=\"true\"]\r\n    .navbar-toggler-awesome.fas.fa-times {\r\n    display: inline-block;\r\n    margin-right: 0.125rem;\r\n}\r\n\r\n.btn-custom {\r\n    background-color: $primary;\r\n    border: $primary;\r\n    padding: 5px 15px;\r\n    color: #fff;\r\n}\r\n\r\n.btn-custom:hover {\r\n    background-color: darken($primary, 15%);\r\n    border: darken($primary, 15%);\r\n    color: #fff;\r\n    box-shadow: 5px 5px 10px 0px rgba(0, 0, 0, 0.15);\r\n}\r\n\r\n.landing {\r\n    height: 600px;\r\n    background-color: $primary;\r\n    color: #fff;\r\n\r\n    padding-top: 5%;\r\n\r\n    .info {\r\n        margin-top: 15%;\r\n        padding-left: 5%;\r\n        h2 {\r\n            color: #fff;\r\n            font-size: 3.5em;\r\n        }\r\n        h4 {\r\n            font-size: 2em;\r\n        }\r\n    }\r\n\r\n    .landimg {\r\n        margin: 20% 0% 0%;\r\n    }\r\n}\r\n\r\n.about {\r\n    margin-top: 5%;\r\n    margin-bottom: 15%;\r\n\r\n    .btn-resume {\r\n        background-color: $primary;\r\n        border: $primary;\r\n        padding: 2% 5%;\r\n        color: #fff;\r\n    }\r\n\r\n    .btn-resume:hover {\r\n        background-color: darken($primary, 15%);\r\n        border: darken($primary, 15%);\r\n        color: #fff;\r\n        box-shadow: 5px 5px 10px 0px rgba(0, 0, 0, 0.15);\r\n    }\r\n\r\n    .social {\r\n        display: flex;\r\n        justify-content: start;\r\n\r\n        a {\r\n            font-size: 15px;\r\n            display: inline-block;\r\n            color: #687683;\r\n            line-height: 1;\r\n            margin-right: 15px;\r\n            transition: 0.3s;\r\n            padding: 10px;\r\n            border-radius: 50px;\r\n            border: 1px solid #dde1e4;\r\n        }\r\n\r\n        a:hover {\r\n            color: #fff;\r\n            border-color: $primary;\r\n            background: $primary;\r\n        }\r\n\r\n        i {\r\n            font-size: 24px;\r\n            color: $primary;\r\n            border-radius: 50%;\r\n            padding: 10px;\r\n            background: lighten($primary, 40%);\r\n        }\r\n    }\r\n\r\n    .profile {\r\n        margin: 0 auto;\r\n\r\n        img {\r\n            width: 450px;\r\n        }\r\n    }\r\n}\r\n\r\n.details {\r\n    margin-bottom: 10%;\r\n    padding: 5% 0%;\r\n    background-color: lighten($primary, 50%);\r\n\r\n    .nav-item .nav-link {\r\n        padding: 0.375rem 1rem 0.375rem 1rem;\r\n        border: none;\r\n        color: rgb(131, 129, 129);\r\n        font-weight: 700;\r\n        font-size: 1.25rem;\r\n        line-height: 1.75rem;\r\n        text-align: center;\r\n        text-decoration: none;\r\n        transition: all 0.2s ease;\r\n    }\r\n\r\n    .nav-item .nav-link:hover,\r\n    .nav-item .nav-link.active {\r\n        background: transparent;\r\n        color: darken($primary, 15%);\r\n        border-bottom: 3px solid darken($primary, 15%);\r\n    }\r\n\r\n    .tab-content .tab-pane {\r\n        margin: 5% 0%;\r\n        transition: all 0.5s ease;\r\n    }\r\n\r\n    #experience {\r\n        li {\r\n            margin-bottom: 10px;\r\n        }\r\n        .job-info {\r\n            float: left;\r\n            width: 70%;\r\n            overflow: hidden;\r\n        }\r\n\r\n        .duration {\r\n            float: right;\r\n            width: 30%;\r\n            overflow: hidden;\r\n        }\r\n\r\n        .list-group-item {\r\n            border: 1px solid rgb(230, 230, 230);\r\n        }\r\n        .list-group-item:hover {\r\n            box-shadow: 0 0.5rem 1rem rgba(0, 0, 0, 0.15) !important;\r\n            transition: all 0.5s;\r\n        }\r\n    }\r\n\r\n    #skills {\r\n        .skill-box {\r\n            background-color: $primary;\r\n            border-radius: 5px;\r\n            padding: 5px 20px;\r\n            color: #fff;\r\n            margin: 0px 10px 15px 0px;\r\n            font-weight: 600;\r\n            box-shadow: 0 0.5rem 1rem rgba(0, 0, 0, 0.09);\r\n        }\r\n\r\n        .skill-box:hover {\r\n            transform: scale(1.5);\r\n            background-color: lighten($primary, 50%);\r\n            border: 2px solid $primary;\r\n            color: #333;\r\n            transition: 0.3s;\r\n        }\r\n\r\n        .part {\r\n            margin-bottom: 15px;\r\n        }\r\n    }\r\n\r\n    #projects {\r\n        .card {\r\n            margin-bottom: 8%;\r\n            border: 1px solid rgb(230, 230, 230);\r\n        }\r\n        .card:hover {\r\n            box-shadow: 0 0.5rem 1rem rgba(0, 0, 0, 0.15) !important;\r\n            transition: all 0.5s;\r\n        }\r\n\r\n        .card-body p {\r\n            font-size: 14px;\r\n        }\r\n        label {\r\n            color: $primary;\r\n        }\r\n    }\r\n}\r\n\r\n.publication {\r\n    padding: 5% 0%;\r\n\r\n    .card {\r\n        margin-bottom: 5%;\r\n    }\r\n    .card:hover {\r\n        box-shadow: 0 0.5rem 1rem rgba(0, 0, 0, 0.15) !important;\r\n        transition: all 0.5s;\r\n    }\r\n\r\n    .btn-pub {\r\n        min-width: 120px;\r\n        background-color: darken($primary, 5%);\r\n        border: $primary;\r\n        padding: 5px 15px;\r\n        color: #fff;\r\n    }\r\n\r\n    .btn-pub:hover {\r\n        background-color: darken($primary, 15%);\r\n        border: darken($primary, 15%);\r\n        color: #fff;\r\n        box-shadow: 5px 5px 10px 0px rgba(0, 0, 0, 0.15);\r\n    }\r\n}\r\n\r\n.footer {\r\n    min-height: 150px;\r\n    background-color: $primary;\r\n    color: #fff;\r\n    p {\r\n        a {\r\n            text-decoration: none;\r\n            color: #fff;\r\n        }\r\n    }\r\n    .social {\r\n        display: flex;\r\n        justify-content: center;\r\n        padding: 0px 0px 20px;\r\n\r\n        a {\r\n            font-size: 12px;\r\n            display: inline-block;\r\n            color: #687683;\r\n            line-height: 1;\r\n            margin-right: 15px;\r\n            transition: 0.3s;\r\n            padding: 8px;\r\n            border-radius: 50px;\r\n            border: 1px solid #dde1e4;\r\n            background-color: #fff;\r\n        }\r\n\r\n        a:hover {\r\n            color: #fff;\r\n            border-color: $primary;\r\n            background: $primary;\r\n        }\r\n\r\n        i {\r\n            font-size: 18px;\r\n            color: darken($primary, 10%);\r\n            border-radius: 50%;\r\n            padding: 10px;\r\n            background: lighten($primary, 40%);\r\n        }\r\n    }\r\n}\r\n\r\n@import \"./responsive\";\r\n","$breakpoints: (\r\n  \"phone\": 360px,\r\n  \"tablet\": 768px,\r\n  \"desktop\": 1366px,\r\n  \"LGdesktop\": 1920px\r\n) !default;\r\n\r\n///\r\n/// Creates a list of static expressions or media types\r\n///\r\n/// @author Eduardo Boucas\r\n///\r\n/// @example scss - Creates a single media type (screen)\r\n///  $media-expressions: ('screen': 'screen');\r\n///\r\n/// @example scss - Creates a static expression with logical disjunction (OR operator)\r\n///  $media-expressions: (\r\n///\t\t'retina2x': (\r\n///\t\t\t'(-webkit-min-device-pixel-ratio: 2)',\r\n///\t\t\t'(min-resolution: 192dpi)'\r\n///\t\t)\r\n///\t);\r\n///\r\n$media-expressions: (\r\n  \"screen\": \"screen\",\r\n  \"print\": \"print\",\r\n  \"handheld\": \"handheld\",\r\n  \"retina2x\": (\r\n    \"(-webkit-min-device-pixel-ratio: 2)\",\r\n    \"(min-resolution: 192dpi)\"\r\n  ),\r\n  \"retina3x\": (\r\n    \"(-webkit-min-device-pixel-ratio: 3)\",\r\n    \"(min-resolution: 350dpi)\"\r\n  )\r\n) !default;\r\n\r\n///\r\n/// Defines a number to be added or subtracted from each unit when declaring breakpoints with exclusive intervals\r\n///\r\n/// @author Eduardo Boucas\r\n///\r\n/// @example scss - Interval for pixels is defined as `1` by default\r\n///  @include media(\">128px\") {}\r\n///\r\n///\t /* Generates: */\r\n///\t @media (min-width: 129px) {}\r\n///\r\n/// @example scss - Interval for ems is defined as `0.01` by default\r\n///  @include media(\">20em\") {}\r\n///\r\n///\t /* Generates: */\r\n///\t @media (min-width: 20.01em) {}\r\n///\r\n/// @example scss - Interval for rems is defined as `0.1` by default, to be used with `font-size: 62.5%;`\r\n///  @include media(\">2.0rem\") {}\r\n///\r\n///\t /* Generates: */\r\n///\t @media (min-width: 2.1rem) {}\r\n///\r\n$unit-intervals: (\r\n  \"px\": 1,\r\n  \"em\": 0.01,\r\n  \"rem\": 0.1\r\n) !default;\r\n///\r\n/// Generates a media query based on a list of conditions\r\n///\r\n/// @author Eduardo Boucas\r\n///\r\n/// @param {List}   $conditions  - Media query conditions\r\n///\r\n/// @example scss - With a single set breakpoint\r\n///  @include media(\">phone\") { }\r\n///\r\n/// @example scss - With two set breakpoints\r\n///  @include media(\">phone\", \"<=tablet\") { }\r\n///\r\n/// @example scss - With custom values\r\n///  @include media(\">=358px\", \"<850px\") { }\r\n///\r\n/// @example scss - With set breakpoints with custom values\r\n///  @include media(\">desktop\", \"<=1350px\") { }\r\n///\r\n/// @example scss - With a static expression\r\n///  @include media(\"retina2x\") { }\r\n///\r\n/// @example scss - Mixing everything\r\n///  @include media(\">=350px\", \"<tablet\", \"retina3x\") { }\r\n///\r\n@mixin media($conditions...) {\r\n  @for $i from 1 through length($conditions) {\r\n    $conditions: set-nth(\r\n      $conditions,\r\n      $i,\r\n      parse-expression(nth($conditions, $i))\r\n    );\r\n  }\r\n\r\n  $branches: get-query-branches($conditions);\r\n  $query: \"\";\r\n\r\n  @each $branch in $branches {\r\n    @if (str-length($query) != 0) {\r\n      $query: $query + \", \";\r\n    }\r\n\r\n    $query: $query + $branch;\r\n  }\r\n\r\n  @media #{$query} {\r\n    @content;\r\n  }\r\n}\r\n\r\n///\r\n/// Reads a list of media query expressions and separates logical disjunctions into different branches\r\n///\r\n/// @author Eduardo Boucas\r\n///\r\n/// @param {List}   $expressions  - list of expressions\r\n///\r\n/// @throws `$expression` is not a valid expression\r\n///\r\n/// @return {List | Null}\r\n///\r\n@function get-query-branches($expressions) {\r\n  $result: \"\";\r\n  $has-groups: false;\r\n\r\n  // Getting initial snapshot and looking for groups\r\n  @each $expression in $expressions {\r\n    @if (str-length($result) != 0) {\r\n      $result: $result + \" and \";\r\n    }\r\n\r\n    @if (type-of($expression) == \"string\") {\r\n      $result: $result + $expression;\r\n    } @else if (type-of($expression) == \"list\") {\r\n      $result: $result + nth($expression, 1);\r\n      $has-groups: true;\r\n    } @else {\r\n      @warn '#{$expression} is not a valid expression.';\r\n    }\r\n  }\r\n\r\n  // If we have groups, we have to create all possible combinations\r\n  @if $has-groups {\r\n    @each $expression in $expressions {\r\n      @if (type-of($expression) == \"list\") {\r\n        $first: nth($expression, 1);\r\n\r\n        @each $member in $expression {\r\n          @if ($member != $first) {\r\n            @each $partial in $result {\r\n              $result: join(\r\n                $result,\r\n                str-replace-first($first, $member, $partial)\r\n              );\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  @return $result;\r\n}\r\n\r\n///\r\n/// Parses a string to form a media query expression\r\n///\r\n/// @author Eduardo Boucas\r\n///\r\n/// @param {String}   $expression  - expression (in string)\r\n///\r\n/// @throws Expression with type `type-of($expression)` detected, string expected\r\n/// @throws `$expression` is missing an operator\r\n/// @throws Unknown unit: `$unit`\r\n///\r\n/// @return {String | Null}\r\n///\r\n@function parse-expression($expression) {\r\n  $operator: \"\";\r\n  $value: \"\";\r\n  $element: \"\";\r\n  $result: \"\";\r\n  $is-width: true;\r\n\r\n  @if (type-of($expression) != \"string\") {\r\n    @warn 'Expression with type `#{type-of($expression)}` detected, string expected.';\r\n  }\r\n\r\n  // Separating the operator from the rest of the expression\r\n  @if (str-slice($expression, 2, 2) == \"=\") {\r\n    $operator: str-slice($expression, 1, 2);\r\n    $value: str-slice($expression, 3);\r\n  } @else {\r\n    $operator: str-slice($expression, 1, 1);\r\n    $value: str-slice($expression, 2);\r\n  }\r\n\r\n  // Checking what type of expression we're dealing with\r\n  @if map-has-key($breakpoints, $value) {\r\n    $result: map-get($breakpoints, $value);\r\n  } @else if map-has-key($media-expressions, $expression) {\r\n    $result: map-get($media-expressions, $expression);\r\n    $is-width: false;\r\n  } @else {\r\n    $result: to-number($value);\r\n  }\r\n\r\n  @if ($is-width) {\r\n    $unit: unit($result);\r\n    $interval: 0;\r\n\r\n    @if (map-has-key($unit-intervals, $unit)) {\r\n      $interval: map-get($unit-intervals, $unit);\r\n    } @else {\r\n      @warn 'Unknown unit: #{$unit}';\r\n    }\r\n\r\n    @if ($operator == \">\") {\r\n      $element: \"(min-width: #{$result + $interval})\";\r\n    } @else if ($operator == \"<\") {\r\n      $element: \"(max-width: #{$result - $interval})\";\r\n    } @else if ($operator == \">=\") {\r\n      $element: \"(min-width: #{$result})\";\r\n    } @else if ($operator == \"<=\") {\r\n      $element: \"(max-width: #{$result})\";\r\n    } @else {\r\n      @warn '#{$expression} is missing an operator.';\r\n    }\r\n  } @else {\r\n    $element: $result;\r\n  }\r\n\r\n  @return $element;\r\n}\r\n\r\n///\r\n/// Replaces the first occurence of the string with the replacement string\r\n///\r\n/// @author Eduardo Boucas\r\n///\r\n/// @param {String}   $search  - The value being searched for\r\n/// @param {String}   $replace  - The replacement string\r\n/// @param {String}   $subject  - The string being replaced on\r\n///\r\n/// @return {String | Null}\r\n///\r\n@function str-replace-first($search, $replace, $subject) {\r\n  $search-start: str-index($subject, $search);\r\n\r\n  @if $search-start == null {\r\n    @return $subject;\r\n  }\r\n\r\n  $result: str-slice($subject, 0, $search-start - 1);\r\n  $result: $result + $replace;\r\n  $result: $result + str-slice($subject, $search-start + str-length($search));\r\n\r\n  @return $result;\r\n}\r\n\r\n///\r\n/// Casts a number to a string\r\n///\r\n/// @author Hugo Giraudel\r\n///\r\n/// @param {String}   $string  - Number to be parsed\r\n///\r\n/// @return {List | Null}\r\n///\r\n@function to-number($string) {\r\n  // Matrices\r\n  $strings: \"0\" \"1\" \"2\" \"3\" \"4\" \"5\" \"6\" \"7\" \"8\" \"9\";\r\n  $numbers: 0 1 2 3 4 5 6 7 8 9;\r\n\r\n  // Result\r\n  $result: 0;\r\n  $divider: 0;\r\n  $minus: false;\r\n\r\n  // Looping through all characters\r\n  @for $i from 1 through str-length($string) {\r\n    $character: str-slice($string, $i, $i);\r\n    $index: index($strings, $character);\r\n\r\n    @if $character == \"-\" {\r\n      $minus: true;\r\n    } @else if $character == \".\" {\r\n      $divider: 1;\r\n    } @else {\r\n      @if type-of($index) != \"number\" {\r\n        $result: if($minus, $result * -1, $result);\r\n        @return _length($result, str-slice($string, $i));\r\n      }\r\n\r\n      $number: nth($numbers, $index);\r\n\r\n      @if $divider == 0 {\r\n        $result: $result * 10;\r\n      } @else {\r\n        // Move the decimal dot to the left\r\n        $divider: $divider * 10;\r\n        $number: $number / $divider;\r\n      }\r\n\r\n      $result: $result + $number;\r\n    }\r\n  }\r\n\r\n  @return if($minus, $result * -1, $result);\r\n}\r\n\r\n@function _length($number, $unit) {\r\n  $strings: \"px\" \"cm\" \"mm\" \"%\" \"ch\" \"pica\" \"in\" \"em\" \"rem\" \"pt\" \"pc\" \"ex\" \"vw\"\r\n    \"vh\" \"vmin\" \"vmax\";\r\n  $units: 1px 1cm 1mm 1% 1ch 1pica 1in 1em 1rem 1pt 1pc 1ex 1vw 1vh 1vmin 1vmax;\r\n  $index: index($strings, $unit);\r\n\r\n  @if type-of($index) != \"number\" {\r\n    @warn 'Unknown unit `#{$unit}`.';\r\n    @return false;\r\n  }\r\n\r\n  @return $number * nth($units, $index);\r\n}\r\n\r\n/**\r\n*\r\n* Testing\r\n*\r\n**/\r\n","@import './include-media';\r\n\r\n\r\n@include media('<=576px') {\r\n\r\n    .mobile-img{\r\n        display: none;\r\n    }\r\n\r\n\r\n    .landing{\r\n        height: 650px;\r\n        color: #fff;\r\n\r\n\r\n        .info{\r\n            margin-top: 50%;\r\n            padding-left: 5%;\r\n            h2 {\r\n                font-size: 3.5em;\r\n                color:#fff;\r\n            }\r\n            h4{\r\n                font-size: 2em;\r\n            }\r\n        }    \r\n    }\r\n\r\n    .about{\r\n\r\n        margin-bottom: 15%;\r\n\r\n        .profile{\r\n            margin: 0 auto;\r\n            margin-bottom: 10%;\r\n\r\n            img{\r\n                width:450px\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n\r\n\r\n    .details{\r\n        padding: 10% 0%;\r\n        margin-bottom: 10%;\r\n\r\n        #skills {\r\n            .part{\r\n                margin-bottom: 15px;\r\n            }   \r\n        }\r\n    }\r\n\r\n    .publication{\r\n        margin-bottom: 15%;\r\n    }\r\n\r\n\r\n\r\n    .footer{\r\n        min-height: 150px;\r\n        .social{\r\n            display: flex;\r\n            justify-content: center;\r\n            padding: 15px 0px 20px;\r\n        }\r\n    }\r\n\r\n}\r\n\r\n\r\n\r\n\r\n// @include media('<=tablet') {\r\n\r\n//     .mobile-img{\r\n//         display: none;\r\n//     }\r\n// }\r\n"]}